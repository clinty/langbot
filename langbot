#!/usr/bin/nodejs

var daemon = require('daemon');
var fs = require('fs');
var running = require('is-running')

var cmd = process.argv[2];
var bot = process.argv[3] || 'default';

if (!cmd) {
  console.error('usage: langbot start|stop|restart [bot_name]');
  process.exit();
}

process.cwd(__dirname);

var conffile = './etc/'+bot+'.config.json';
if (!fs.existsSync(conffile)) {
  console.error('no such bot '+bot);
  process.exit();
};


var pidfile = './var/'+bot+'.pid';
var pid = fs.existsSync(pidfile) ? Number(fs.readFileSync(pidfile)) : null;
if (pid) console.log('Found pid '+pid);
if (!running(pid)) {
  console.log('Found stale pid file. Will delete.');
  fs.unlinkSync(pidfile);
  pid = null;
}

function stop(cb) {
  if (!pid) {
    console.log(bot + ' is not running.');
    cb && cb();
    return;
  }
  process.stdout.write('Stopping '+bot+' ');
  process.kill(pid,'SIGINT');
  var cnt = 0;
  console.log('waiting');
  var t = setInterval(function() {
    cnt++;
    process.stdout.write(".");
    var r = running(pid);
    if (cnt == 20 || !r) {
      if (r)  {
        process.stdout.write('. Timed out. \n');
        console.log(bot+' refuses to stop. Will kill.');
        process.kill(pid,'SIGHUP');
      } else {
        process.stdout.write('. Stopped. \n');
      }
      if (fs.existsSync(pidfile)) fs.unlinkSync(pidfile);
      pid = null;
      clearInterval(t);
      cb && cb();
    };
  },1000);
}

function start(cb) {
  if (pid) {
    console.log(bot + ' is already running at pid '+pid+'.');
    cb && cb();
    return;
  }
  daemon.daemon('./src/index.js',[bot],{
    stdout: process.stdout,
    stderr: process.stderr,
  });
}

var exit = function() {
  console.log('Done');
  process.exit();
}

switch (cmd) {
case 'start':
  start(exit);
  break;
case 'stop':
  stop(exit);
  break;
case 'restart':
  stop(function() {
    start(exit);
  });
  break;
case 'install': 
case 'update': 
  console.log('this should install/update your npm packages and do git pull, but it doesn\'t');
  break;
default:
  console.error('usage: langbot start|stop|restart [bot_name]');
}

